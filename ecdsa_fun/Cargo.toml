[package]
name = "ecdsa_fun"
version = "0.4.2-alpha.0"
authors = ["LLFourn <lloyd.fourn@gmail.com>"]
edition = "2018"
license = "0BSD"
homepage = "https://github.com/LLFourn/secp256kfun"
repository = "https://github.com/LLFourn/secp256kfun"
documentation = "https://docs.rs/ecdsa_fun"
description = "Bitcoin compatible ECDSA signatures based on secp256kfun"
readme = "README.md"
categories = ["cryptography", "cryptography::cryptocurrencies"]
keywords = ["bitcoin", "ecdsa", "secp256k1"]

[package.metadata.docs.rs]
features = ["serde", "libsecp_compat"]

[dependencies]
secp256kfun = { path = "../secp256kfun", version = "^0.4.2-alpha.0", default-features = false }
serde_crate = { package = "serde", version = "1.0", default-features = false, optional = true, features = ["derive", "alloc"] }
sigma_fun = { path = "../sigma_fun", version = "^0.1.2-alpha.0", features = ["secp256k1"]}
rand_chacha = "0.2" # needed for adaptor signatures atm but would be nice to get rid of
bincode = { version = "1.0", optional = true }

[dev-dependencies]
secp256k1 = { default-features = false, version = "0.19", features = ["std"] }
secp256kfun = { path = "../secp256kfun", version = "^0.4.2-alpha.0", features = ["libsecp_compat"] }
rand = "0.7"
criterion = "0.3"
hex-literal = "0.2"
lazy_static = "1.4"
sha2 = "0.9"
serde_json = "1"

[[bench]]
name = "bench_ecdsa"
harness = false

[features]
default = ["std"]
all = ["std", "serde", "libsecp_compat"]
libsecp_compat = ["secp256kfun/libsecp_compat"]
std = ["alloc"]
alloc = []
serde = ["secp256kfun/serde", "serde_crate", "sigma_fun/serde", "bincode"]
