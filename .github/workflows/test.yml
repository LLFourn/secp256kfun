name: Tests


on:
  push:
    branches:
      - master
  pull_request:

# Make sure CI fails on all warnings, including Clippy lints
env:
    RUSTFLAGS: "-Dwarnings"

jobs:

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Clippy
        run: cargo clippy --all-targets --all-features


  # We want to test stable on multiple platforms with --all-features
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: ["x86_64-unknown-linux-gnu", "armv7-unknown-linux-gnueabihf"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.60.0
          target: ${{ matrix.target }}
          override: true
      - uses: Swatinem/rust-cache@v2.0.0

      - name: test-on-target
        uses: actions-rs/cargo@v1
        with:
          use-cross:  ${{ matrix.target != 'x86_64-unknown-linux-gnu' }}
          command: test
          args:  --all-features --release --target ${{ matrix.target }}

  # test nightly build/test
  test-nightly:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          target: "x86_64-unknown-linux-gnu"
          override: true
      - uses: Swatinem/rust-cache@v2.0.0
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --all-features

  # test without default features
  test-minimal:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [ "secp256kfun", "sigma_fun", "ecdsa_fun", "schnorr_fun" ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: "x86_64-unknown-linux-gnu"
          override: true
      - uses: Swatinem/rust-cache@v2.0.0
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --no-default-features -p ${{ matrix.package }}


  # test with alloc feature only
  test-alloc:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [ "secp256kfun", "sigma_fun", "ecdsa_fun", "schnorr_fun" ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: "x86_64-unknown-linux-gnu"
          override: true
      - uses: Swatinem/rust-cache@v2.0.0
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --no-default-features --features alloc -p ${{ matrix.package }}


  doc-build:
     name: doc-build
     runs-on: ubuntu-latest
     steps:
       - uses: actions/checkout@v2
       - uses: actions-rs/toolchain@v1
         with:
           profile: minimal
           toolchain: nightly
           override: true
       - name: build-doc
         # convoluted way to make it fail on warnings
         run: "cargo doc --no-deps --workspace 2>&1 | tee /dev/fd/2 | grep -iEq '^(warning|error)' && exit 1 || exit 0"
