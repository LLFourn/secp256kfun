
[package]
name = "schnorr_fun"
version = "0.11.0"
authors = ["LLFourn <lloyd.fourn@gmail.com>"]
edition = "2024"
rust-version = "1.85.0"
license = "0BSD"
homepage = "https://github.com/LLFourn/secp256kfun/tree/master/schnorr_fun"
repository = "https://github.com/LLFourn/secp256kfun"
documentation = "https://docs.rs/schnorr_fun"
description = "BIP340 Schnorr signatures based on secp256kfun"
categories = ["cryptography", "cryptography::cryptocurrencies"]
keywords = ["bitcoin", "schnorr"]

[dependencies]
secp256kfun = { workspace = true }
bech32 = { version = "0.11", optional = true, default-features = false, features = ["alloc"] }
bincode = { workspace =  true, optional = true }
vrf_fun = { workspace = true, optional = true }
sha2 = { version = "0.10", optional = true, default-features = false }

[dev-dependencies]
secp256kfun = { workspace = true, features = ["proptest", "bincode", "alloc"] }
rand = { version = "0.8" }
lazy_static = "1.4"
sha2 = "0.10"
serde_json = "1"
rand_chacha = { workspace = true }
[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
criterion = "0.4"
[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3"

[[bench]]
name = "bench_schnorr"
harness = false
required-features = ["libsecp_compat"]


[features]
default = ["std"]
alloc = ["secp256kfun/alloc"]
std = ["alloc", "secp256kfun/std", "vrf_fun?/std"]
bincode = [ "dep:bincode", "secp256kfun/bincode", "vrf_fun?/bincode"]
serde = ["secp256kfun/serde", "vrf_fun?/serde"]
libsecp_compat = ["libsecp_compat_0_30", "secp256kfun/libsecp_compat"]
libsecp_compat_0_27 = ["secp256kfun/libsecp_compat_0_27"]
libsecp_compat_0_28 = ["secp256kfun/libsecp_compat_0_28"]
libsecp_compat_0_29 = ["secp256kfun/libsecp_compat_0_29"]
libsecp_compat_0_30 = ["secp256kfun/libsecp_compat_0_30"]
proptest = ["secp256kfun/proptest"]
share_backup = ["dep:bech32"]
vrf_cert_keygen = ["dep:vrf_fun", "dep:sha2"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
