[package]
name = "secp256kfun"
version = "0.3.2-alpha.0"
authors = ["LLFourn <lloyd.fourn@gmail.com>"]
license = "0BSD"
homepage = "https://github.com/LLFourn/secp256kfun"
repository = "https://github.com/LLFourn/secp256kfun"
documentation = "https://docs.rs/secp256kfun"
description = "A mid-level secp256k1 library optimized for fun!"
edition = "2018"
categories = ["cryptography", "cryptography::cryptocurrencies"]
readme = "README.md"
keywords = ["bitcoin", "secp256k1"]

[package.metadata.docs.rs]
features = ["serialize_hex", "serialization"]

[dependencies]
digest = "0.9"
subtle = { version = "2.2" }
rand_core = { version = "0.5" }
serde = { version = "1.0",  optional = true, default-features = false, features = ["derive"] }
parity_backend = { version = "0.1.1", package = "secp256kfun_parity_backend" }
secp256k1 = { version = "0.17", optional = true, default-features = false }
proptest = { version = "0.10", optional = true }

[dev-dependencies]
hex-literal = "0.2"
serde_json = "1"
rand = { version = "0.7", features = ["wasm-bindgen"] }
lazy_static = "1.4"
sha2 = "0.9"

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
secp256k1 = { default-features = false, version = "0.17", features = ["std"] }
grin_secp256k1zkp = "0.7"
bincode = "1.0"
criterion = "0.3"

[build-dependencies]
parity_backend = { version = "0.1.2", package = "secp256kfun_parity_backend", features = ["alloc"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3"


[features]
default = ["std"]
all = ["std", "serialize_hex", "libsecp_compat"]
alloc = []
std = ["alloc"]
serialization = ["serde"]
serialize_hex = [ "alloc", "serialization" ]
libsecp_compat = ["secp256k1"]


[[bench]]
name = "bench_ecmult"
harness = false
